@inherits AppCode.Razor.AppRazor
@using AppCode.Data
@using AppCode.Helpers

@using ToSic.Razor.Blade
@using System.Web
@using System
@using DotNetNuke.Entities.Portals
@using DotNetNuke.Entities.Tabs

@{
  var cdnCache = GetService<CDNCache>();

  var currentTabId = MyPage.Id;
  var allCacheSettings = App.Data.GetAll<CacheSettings>();

  // Find relevant cache setting (for page or parent)
  var status = cdnCache.FindRelevantCacheSetting(currentTabId, allCacheSettings);

  // Extract values with fallback to App.Settings
  var isEnabled = cdnCache.GetSettingValue(status, "IsEnabled", App.Settings.IsEnabled);
  var cacheMaxAge = cdnCache.GetSettingValue(status, "MaxAge", App.Settings.MaxAge);
  var cacheSMaxAge = cdnCache.GetSettingValue(status, "SMaxAge", App.Settings.SMaxAge);
  var cacheTag = status.Found && Text.Has(status.Settings.CacheTag)
    ? status.Settings.CacheTag
    : App.Settings.CacheTag;

  var timeStamp = DateTime.UtcNow.ToString("yyyy-MM-dd HH:mm:ss");

  var header = "";
  if (isEnabled)
  {
    cdnCache.SetPublicCacheHeaders(Response, (int)cacheMaxAge, (int)cacheSMaxAge, cacheTag, status?.Settings?.NoCache ?? false);
    if (status?.Settings?.NoCache ?? false)
      header = "no-cache, no-store, must-revalidate";
    else
      header = $"public, max-age={cacheMaxAge}, s-maxage={cacheSMaxAge}";
  }

  var data = new {
    domId = MyContext.Module.Id,
    isEnabled = isEnabled.ToString().ToLower(),
    header = header,
    cacheTag = cacheTag,
    serverTime = timeStamp
  };
}

@* Add a hidden timestamp to better debug any issues *@
<!-- Server Timestamp: @timeStamp -->

@* Add scripts etc. to optionally show caching information in anonymous mode, if the correct link is used *@
<script src="@App.Folder.Url/dist/index.js"></script>
@Kit.Page.TurnOn("window.appCdn.initCacheStatus()", data: data)

@* Show Admin Area to Editors *@
@if (MyUser.IsContentAdmin)
{
  var toolbar = cdnCache.GetToolbar(status, currentTabId);

  @* Accordion with everything *@
  <div class="accordion" id="app-cdn">
    <div class="accordion-item">
      
      @* Accordion Header with status information *@
      <h2 class="accordion-header">
        <button class="accordion-button @(App.Settings.OpenSettings ? "" : "collapsed")" type="button" data-bs-toggle="collapse" data-bs-target="#app-cache-settings">
          Output Caching @(isEnabled ? App.Resources.LabelEnabled + " ✔️" : App.Resources.LabelDisabled + " ❌")
        </button>
      </h2>
      
      @* Accordion Body with settings and stats; should be collapsed in production (see App setting for that) *@
      <div id="app-cache-settings" class="accordion-collapse collapse @(App.Settings.OpenSettings ? "show" : "")" data-bs-parent="#app-cdn">
        <div class="accordion-body">
          @* Green box showing which settings are being used *@
          <div class="alert alert-success" @toolbar>
            @cdnCache.RenderSettingsInfo(status, currentTabId)

            @if (isEnabled) {
              if(status.Found && status.Settings.NoCache) {
                <div>Cache-Control: NO-CACHE</div>
              } else {
                <div>
                  @App.Resources.LabelSettings
                  <strong>MaxAge:</strong> <code>@cacheMaxAge</code>;
                  <strong>SMaxAge:</strong> <code>@cacheSMaxAge</code>;
                  <strong>Cache-Tag:</strong> <code>@Text.First(cacheTag, "-")</code>
                </div>
              }
            }
          
            @* Info to see the final stats in anonymous mode is for everybody *@
            <div class="text-danger">@Html.Raw(App.Resources.MsgOpenInAnonymous)</div>
          </div>

          <h3>@App.Resources.FlushTitle</h3>
          <div class="input-group mb-3">
            <button class="btn btn-primary" type="button" id="custom-purge">@App.Resources.FlushUrl</button>
            <input type="text" class="form-control" placeholder="Enter url which should be purged" value="@cdnCache.RemapUrl(Link.To(), App.Settings.UrlRewriteMap)" id="custom-purge-url">
          </div>

          <div class="input-group mb-3">
            <button class="btn btn-outline-primary" type="button" id="tag-purge">@App.Resources.FlushTags</button>
            <input type="text" class="form-control" value="" id="tag-purge-url">
          </div>

          <div class="input-group mb-3">
            <button class="btn btn-outline-primary" type="button" id="full-purge">@App.Resources.FlushAll</button>
          </div>

          @* Only show statistics to super users, and others would be confused *@
          @if (PortalSettings.Current.UserInfo.IsSuperUser)
          {
            <h3>@App.Resources.StatisticsTitle</h3>
            @Html.Raw(App.Resources.StatisticsIntro)
            <textarea class="form-control" id="app-stats" rows="8" readonly></textarea>
          }
        </div>
      </div>
    </div>
  </div>

  <style>
    #app-cdn .alert-success .text-danger p {
      margin-bottom: 0;
    }
  </style>
}